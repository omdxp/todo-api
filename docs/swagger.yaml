basePath: /
definitions:
  data.CreateTodoRequest:
    properties:
      title:
        type: string
    type: object
  data.Todo:
    properties:
      completed:
        type: boolean
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  data.UpdateTodoRequest:
    properties:
      completed:
        type: boolean
      title:
        type: string
    type: object
  main.Response:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Omdxp
  description: This is a sample server Todo API server.
  title: Todo API
  version: 1.0.0
paths:
  /todos:
    get:
      description: Get all todos
      operationId: get-todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/data.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Get all todos
    post:
      consumes:
      - application/json
      description: Create a new todo
      operationId: create-todo
      parameters:
      - description: CreateTodoRequest
        in: body
        name: request-body
        required: true
        schema:
          $ref: '#/definitions/data.CreateTodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Create a new todo
  /todos/{id}:
    delete:
      description: Delete a todo by id
      operationId: delete-todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Delete a todo by id
    get:
      description: Get a todo by id
      operationId: get-todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Get a todo by id
    put:
      consumes:
      - application/json
      description: Update a todo by id
      operationId: update-todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: UpdateTodoRequest
        in: body
        name: request-body
        required: true
        schema:
          $ref: '#/definitions/data.UpdateTodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Update a todo by id
swagger: "2.0"
